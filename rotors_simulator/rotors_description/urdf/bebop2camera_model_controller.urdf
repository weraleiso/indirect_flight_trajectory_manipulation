<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from bebop2camera_generic_odometry_sensor.gazebo | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<!--
  Copyright 2015 Fadri Furrer, ASL, ETH Zurich, Switzerland
  Copyright 2015 Michael Burri, ASL, ETH Zurich, Switzerland
  Copyright 2015 Mina Kamel, ASL, ETH Zurich, Switzerland
  Copyright 2015 Janosch Nikolic, ASL, ETH Zurich, Switzerland
  Copyright 2015 Markus Achtelik, ASL, ETH Zurich, Switzerland

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<robot name="bebop2camera" xmlns:xacro="http://ros.org/wiki/xacro">
  <!-- Instantiate the mav-->
  <!-- Macro to add logging to a bag file. -->
  <!-- Macro to add a camera. -->
  <!-- Camera joint macro - just the joints, links, and collisions for a single
       camera. -->
  <!-- Camera sensor macro - just image parameters. -->
  <!-- Macro to add a multicamera (stereo pair). -->
  <!-- Macro to add the controller interface. -->
  <!-- =============================================================== -->
  <!-- ==================== ROS INTERFACE MACRO ====================== -->
  <!-- =============================================================== -->
  <!-- <xacro:macro 
  		name="ros_interface_plugin_macro"
  		params="namespace">
    <gazebo>
      <plugin name="ros_interface_plugin" filename="librotors_gazebo_ros_interface_plugin.so">
        <robotNamespace>${namespace}</robotNamespace>
      </plugin>
    </gazebo>
  </xacro:macro>-->
  <!-- =============================================================== -->
  <!-- ================== MAVLINK INTERFACE MACRO ==================== -->
  <!-- =============================================================== -->
  <!-- Macro to add an IMU. -->
  <!-- Macro to add a generic odometry sensor. -->
  <!-- Macro to add a GPS sensor. -->
  <!-- Macro to add a magnetometer. -->
  <!-- Macro to add an air pressure sensor. -->
  <!-- Macro to add the wind plugin. -->
  <!-- VI sensor macros -->
  <!-- Macro to add a VI-sensor camera. -->
  <!-- Macro to add a VI-sensor stereo camera. -->
  <!-- Macro to add a depth camera on the VI-sensor. -->
  <!-- VI-Sensor Macro -->
  <!-- Instantiate ardrone "mechanics" -->
  <!-- Properties -->
  <!-- [kg] -->
  <!-- [kg] -->
  <!-- [m] -->
  <!-- [m] -->
  <!-- [kg] -->
  <!-- [m] -->
  <!-- [m] -->
  <!-- [m] -->
  <!-- [kg.m/s^2] -->
  <!-- [m] -->
  <!-- [s] -->
  <!-- [s] -->
  <!-- [rad/s] -->
  <!-- Property Blocks -->
  <!-- inertia of a single rotor, assuming it is a cuboid. Height=3mm, width=15mm -->
  <!-- Included URDF Files -->
  <!-- Macro for the inertia of a box -->
  <!-- Macro for the inertial properties of a box -->
  <!-- Main multirotor link -->
  <!-- Rotor joint and link -->
  <!-- Instantiate multirotor_base_macro once -->
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
		<!--<robotNamespace>/reshaping/bebop2_camera</robotNamespace>-->
		<robotParam>/reshaping/bebop2_camera/robot_description_controller</robotParam>
    </plugin>
  </gazebo>
  <link name="/reshaping/bebop2_camera/base_link"/>
  <link name="/reshaping/bebop2_camera/base_link_inertia">
    <inertial>
      <mass value="0.503"/>
      <!-- [kg] -->
      <origin xyz="0 0 0"/>
      <inertia ixx="1.805e-3" ixy="-8.619e-7" ixz="1.555e-5" iyy="1.764e-3" iyz="3.595e-7" izz="3.328e-3"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rotors_description/meshes/bebop2.dae" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.316618 0.316618 0.089582"/>
        <!-- [m] [m] [m] -->
      </geometry>
    </collision>
  </link>
  <joint name="/reshaping/bebop2_camera/base_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="/reshaping/bebop2_camera/base_link"/>
    <child link="/reshaping/bebop2_camera/base_link_inertia"/>
  </joint>
  <joint name="cam_yaw_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="/reshaping/bebop2_camera/base_link_inertia"/>
    <child link="/reshaping/bebop2_camera/cam_yaw_link"/>
    <axis rpy="0 0 0" xyz="0 0 1"/>
    <limit effort="100.0" lower="-1.0" upper="1.0" velocity="100.0"/>
  </joint>
  <joint name="cam_pitch_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="/reshaping/bebop2_camera/cam_yaw_link"/>
    <child link="/reshaping/bebop2_camera/cam_pitch_link"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <limit effort="100.0" lower="-1.0" upper="1.0" velocity="100.0"/>
  </joint>
  <link name="/reshaping/bebop2_camera/cam_yaw_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 1"/>
      <mass value="0.0001"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
        <!-- [m] [m] [m] -->
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
        <!-- [m] [m] [m] -->
      </geometry>
    </collision>
  </link>
  <link name="/reshaping/bebop2_camera/cam_pitch_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 1"/>
      <mass value="0.0001"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
        <!-- [m] [m] [m] -->
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
        <!-- [m] [m] [m] -->
      </geometry>
    </collision>
  </link>
  <transmission name="cam_yaw_tran">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="cam_yaw_joint">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="cam_yaw_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="cam_pitch_tran">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="cam_pitch_joint">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="cam_pitch_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- attach multirotor_base_plugin to the base_link -->
  <gazebo>
    <plugin filename="librotors_gazebo_multirotor_base_plugin.so" name="multirotor_base_plugin">
      <robotNamespace>/reshaping/bebop2_camera</robotNamespace>
      <linkName>/reshaping/bebop2_camera/base_link</linkName>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>
  <!-- Instantiate rotors -->
  <joint name="/reshaping/bebop2_camera/rotor_0_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.08456 -0.11435 -0.00501"/>
    <axis xyz="0 0 1"/>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
    <parent link="/reshaping/bebop2_camera/base_link"/>
    <child link="/reshaping/bebop2_camera/rotor_0"/>
  </joint>
  <link name="/reshaping/bebop2_camera/rotor_0">
    <inertial>
      <mass value="0.001"/>
      <!-- [kg] -->
      <inertia ixx="1.94999922e-07" ixy="0.0" ixz="0.0" iyy="8.340829997e-06" iyz="0.0" izz="8.520829925e-06"/>
    </inertial>
    <visual>
      <geometry>
        <!-- <cylinder length="0.005" radius="${radius_rotor}"/> -->
        <!-- [m] -->
        <mesh filename="package://rotors_description/meshes/propeller_fr.dae" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.005" radius="0.1"/>
        <!-- [m] -->
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="librotors_gazebo_motor_model.so" name="/reshaping/bebop2_camera_front_right_motor_model">
      <robotNamespace>/reshaping/bebop2_camera</robotNamespace>
      <jointName>/reshaping/bebop2_camera/rotor_0_joint</jointName>
      <linkName>/reshaping/bebop2_camera/rotor_0</linkName>
      <turningDirection>ccw</turningDirection>
      <timeConstantUp>0.0125</timeConstantUp>
      <timeConstantDown>0.025</timeConstantDown>
      <maxRotVelocity>838</maxRotVelocity>
      <motorConstant>8.54858e-06</motorConstant>
      <momentConstant>0.016</momentConstant>
      <commandSubTopic>gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>0</motorNumber>
      <rotorDragCoefficient>8.06428e-05</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>motor_speed/0</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>
  <!--<gazebo reference="${robot_namespace}/rotor_${motor_number}">
      <material>Gazebo/${color}</material>
    </gazebo>-->
  <joint name="/reshaping/bebop2_camera/rotor_1_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.09035 0.11452 -0.00501"/>
    <axis xyz="0 0 1"/>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
    <parent link="/reshaping/bebop2_camera/base_link"/>
    <child link="/reshaping/bebop2_camera/rotor_1"/>
  </joint>
  <link name="/reshaping/bebop2_camera/rotor_1">
    <inertial>
      <mass value="0.001"/>
      <!-- [kg] -->
      <inertia ixx="1.94999922e-07" ixy="0.0" ixz="0.0" iyy="8.340829997e-06" iyz="0.0" izz="8.520829925e-06"/>
    </inertial>
    <visual>
      <geometry>
        <!-- <cylinder length="0.005" radius="${radius_rotor}"/> -->
        <!-- [m] -->
        <mesh filename="package://rotors_description/meshes/propeller_rl.dae" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.005" radius="0.1"/>
        <!-- [m] -->
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="librotors_gazebo_motor_model.so" name="/reshaping/bebop2_camera_back_left_motor_model">
      <robotNamespace>/reshaping/bebop2_camera</robotNamespace>
      <jointName>/reshaping/bebop2_camera/rotor_1_joint</jointName>
      <linkName>/reshaping/bebop2_camera/rotor_1</linkName>
      <turningDirection>ccw</turningDirection>
      <timeConstantUp>0.0125</timeConstantUp>
      <timeConstantDown>0.025</timeConstantDown>
      <maxRotVelocity>838</maxRotVelocity>
      <motorConstant>8.54858e-06</motorConstant>
      <momentConstant>0.016</momentConstant>
      <commandSubTopic>gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>1</motorNumber>
      <rotorDragCoefficient>8.06428e-05</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>motor_speed/1</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>
  <!--<gazebo reference="${robot_namespace}/rotor_${motor_number}">
      <material>Gazebo/${color}</material>
    </gazebo>-->
  <joint name="/reshaping/bebop2_camera/rotor_2_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.08456 0.11463 -0.00501"/>
    <axis xyz="0 0 1"/>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
    <parent link="/reshaping/bebop2_camera/base_link"/>
    <child link="/reshaping/bebop2_camera/rotor_2"/>
  </joint>
  <link name="/reshaping/bebop2_camera/rotor_2">
    <inertial>
      <mass value="0.001"/>
      <!-- [kg] -->
      <inertia ixx="1.94999922e-07" ixy="0.0" ixz="0.0" iyy="8.340829997e-06" iyz="0.0" izz="8.520829925e-06"/>
    </inertial>
    <visual>
      <geometry>
        <!-- <cylinder length="0.005" radius="${radius_rotor}"/> -->
        <!-- [m] -->
        <mesh filename="package://rotors_description/meshes/propeller_fl.dae" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.005" radius="0.1"/>
        <!-- [m] -->
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="librotors_gazebo_motor_model.so" name="/reshaping/bebop2_camera_front_left_motor_model">
      <robotNamespace>/reshaping/bebop2_camera</robotNamespace>
      <jointName>/reshaping/bebop2_camera/rotor_2_joint</jointName>
      <linkName>/reshaping/bebop2_camera/rotor_2</linkName>
      <turningDirection>cw</turningDirection>
      <timeConstantUp>0.0125</timeConstantUp>
      <timeConstantDown>0.025</timeConstantDown>
      <maxRotVelocity>838</maxRotVelocity>
      <motorConstant>8.54858e-06</motorConstant>
      <momentConstant>0.016</momentConstant>
      <commandSubTopic>gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>2</motorNumber>
      <rotorDragCoefficient>8.06428e-05</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>motor_speed/2</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>
  <!--<gazebo reference="${robot_namespace}/rotor_${motor_number}">
      <material>Gazebo/${color}</material>
    </gazebo>-->
  <joint name="/reshaping/bebop2_camera/rotor_3_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.09035 -0.11423 -0.00501"/>
    <axis xyz="0 0 1"/>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
    <parent link="/reshaping/bebop2_camera/base_link"/>
    <child link="/reshaping/bebop2_camera/rotor_3"/>
  </joint>
  <link name="/reshaping/bebop2_camera/rotor_3">
    <inertial>
      <mass value="0.001"/>
      <!-- [kg] -->
      <inertia ixx="1.94999922e-07" ixy="0.0" ixz="0.0" iyy="8.340829997e-06" iyz="0.0" izz="8.520829925e-06"/>
    </inertial>
    <visual>
      <geometry>
        <!-- <cylinder length="0.005" radius="${radius_rotor}"/> -->
        <!-- [m] -->
        <mesh filename="package://rotors_description/meshes/propeller_rr.dae" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.005" radius="0.1"/>
        <!-- [m] -->
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="librotors_gazebo_motor_model.so" name="/reshaping/bebop2_camera_back_right_motor_model">
      <robotNamespace>/reshaping/bebop2_camera</robotNamespace>
      <jointName>/reshaping/bebop2_camera/rotor_3_joint</jointName>
      <linkName>/reshaping/bebop2_camera/rotor_3</linkName>
      <turningDirection>cw</turningDirection>
      <timeConstantUp>0.0125</timeConstantUp>
      <timeConstantDown>0.025</timeConstantDown>
      <maxRotVelocity>838</maxRotVelocity>
      <motorConstant>8.54858e-06</motorConstant>
      <momentConstant>0.016</momentConstant>
      <commandSubTopic>gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>3</motorNumber>
      <rotorDragCoefficient>8.06428e-05</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>motor_speed/3</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>
  <!--<gazebo reference="${robot_namespace}/rotor_${motor_number}">
      <material>Gazebo/${color}</material>
    </gazebo>-->
  <!--Mount a Camera-->
  <!--<xacro:camera_macro
      namespace="${namespace}"
      parent_link="${namespace}/base_link"
      camera_suffix="base"
      frame_rate="30.0"
      horizontal_fov="1.7"
      image_width="856"
      image_height="480"
      image_format="R8G8B8"
      min_distance="0.02"
      max_distance="50"
      noise_mean="0.0"
      noise_stddev="0.007"
      enable_visual="true">
      <box size="0.001 0.001 0.001" />
      <origin xyz="0.1 0 0" rpy="0 0 0" />
  </xacro:camera_macro>-->
  <!-- These are parameters for the left camera link and then the right
        as well. -->
  <link name="/reshaping/bebop2_camera/camera_left_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1e-5"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  <joint name="/reshaping/bebop2_camera/camera_left_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.2 0.05 0.0"/>
    <parent link="/reshaping/bebop2_camera/base_link"/>
    <child link="/reshaping/bebop2_camera/camera_left_link"/>
  </joint>
  <link name="/reshaping/bebop2_camera/camera_right_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1e-5"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  <joint name="/reshaping/bebop2_camera/camera_right_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.2 -0.05 0.0"/>
    <parent link="/reshaping/bebop2_camera/base_link"/>
    <child link="/reshaping/bebop2_camera/camera_right_link"/>
  </joint>
  <link name="/reshaping/bebop2_camera/camera_left_optical_link"/>
  <joint name="/reshaping/bebop2_camera/camera_left_optical_joint" type="fixed">
    <origin rpy="-1.5707963268 0 -1.5707963268" xyz="0 0 0"/>
    <parent link="/reshaping/bebop2_camera/camera_left_link"/>
    <child link="/reshaping/bebop2_camera/camera_left_optical_link"/>
  </joint>
  <!-- Both cameras in the pair are anchored off the left camera frame. -->
  <gazebo reference="/reshaping/bebop2_camera/camera_left_link">
    <sensor name="/reshaping/bebop2_camera_stereo_camera" type="multicamera">
      <update_rate>30.0</update_rate>
      <!-- Here we set up the individual cameras of the stereo head. -->
      <camera name="left">
        <pose>0 -0.0 0 0 0 0</pose>
        <horizontal_fov>1.7</horizontal_fov>
        <image>
          <width>856</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>50</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
             That pixel's noise value is added to each of its color
             channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <camera name="right">
        <pose>0 -0.1 0 0 0 0</pose>
        <horizontal_fov>1.7</horizontal_fov>
        <image>
          <width>856</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>50</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
             That pixel's noise value is added to each of its color
             channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <!-- Stereo controller, setting the transforms between the two cameras. -->
      <plugin filename="libgazebo_ros_multicamera.so" name="/reshaping/bebop2_camera_stereo_camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>stereo_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>stereo_camera/camera_left_link</frameName>
        <hackBaseline>0.1</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Instantiate a controller. -->
  <gazebo>
    <plugin filename="librotors_gazebo_controller_interface.so" name="controller_interface">
      <robotNamespace>/reshaping/bebop2_camera</robotNamespace>
      <commandAttitudeThrustSubTopic>command/attitude</commandAttitudeThrustSubTopic>
      <commandRateThrustSubTopic>command/rate</commandRateThrustSubTopic>
      <commandMotorSpeedSubTopic>command/motor_speed</commandMotorSpeedSubTopic>
      <imuSubTopic>imu</imuSubTopic>
      <motorSpeedCommandPubTopic>gazebo/command/motor_speed</motorSpeedCommandPubTopic>
    </plugin>
  </gazebo>
  <!-- Mount an ADIS16448 IMU. -->
  <!-- ADIS16448 IMU. -->
  <!-- IMU link -->
  <link name="/reshaping/bebop2_camera/imu_link">
    <inertial>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
      <mass value="0.015"/>
      <!-- [kg] -->
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </inertial>
  </link>
  <!-- IMU joint -->
  <joint name="/reshaping/bebop2_camera/imu_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="/reshaping/bebop2_camera/base_link"/>
    <child link="/reshaping/bebop2_camera/imu_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
  </joint>
  <gazebo>
    <plugin filename="librotors_gazebo_imu_plugin.so" name="rotors_gazebo_imu_plugin">
      <!-- A good description of the IMU parameters can be found in the kalibr documentation:
           https://github.com/ethz-asl/kalibr/wiki/IMU-Noise-Model-and-Intrinsics -->
      <robotNamespace>/reshaping/bebop2_camera</robotNamespace>
      <!-- (string, required): ros namespace in which the messages are published -->
      <linkName>/reshaping/bebop2_camera/imu_link</linkName>
      <!-- (string, required): name of the body which holds the IMU sensor -->
      <imuTopic>imu</imuTopic>
      <!-- (string): name of the sensor output topic and prefix of service names (defaults to imu) -->
      <gyroscopeNoiseDensity>0.0003394</gyroscopeNoiseDensity>
      <!-- Gyroscope noise density (two-sided spectrum) [rad/s/sqrt(Hz)] -->
      <gyroscopeRandomWalk>3.8785e-05</gyroscopeRandomWalk>
      <!-- Gyroscope bias random walk [rad/s/s/sqrt(Hz)] -->
      <gyroscopeBiasCorrelationTime>1000.0</gyroscopeBiasCorrelationTime>
      <!-- Gyroscope bias correlation time constant [s] -->
      <gyroscopeTurnOnBiasSigma>0.0087</gyroscopeTurnOnBiasSigma>
      <!-- Gyroscope turn on bias standard deviation [rad/s] -->
      <accelerometerNoiseDensity>0.004</accelerometerNoiseDensity>
      <!-- Accelerometer noise density (two-sided spectrum) [m/s^2/sqrt(Hz)] -->
      <accelerometerRandomWalk>0.006</accelerometerRandomWalk>
      <!-- Accelerometer bias random walk. [m/s^2/s/sqrt(Hz)] -->
      <accelerometerBiasCorrelationTime>300.0</accelerometerBiasCorrelationTime>
      <!-- Accelerometer bias correlation time constant [s] -->
      <accelerometerTurnOnBiasSigma>0.196</accelerometerTurnOnBiasSigma>
      <!-- Accelerometer turn on bias standard deviation [m/s^2] -->
    </plugin>
  </gazebo>
  <!-- Mount an IMU providing ground truth. -->
  <!-- IMU link -->
  <link name="/reshaping/bebop2_camera/imugt_link">
    <inertial>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
      <mass value="1e-05"/>
      <!-- [kg] -->
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </inertial>
  </link>
  <!-- IMU joint -->
  <joint name="/reshaping/bebop2_camera/imugt_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="/reshaping/bebop2_camera/base_link"/>
    <child link="/reshaping/bebop2_camera/imugt_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
  </joint>
  <gazebo>
    <plugin filename="librotors_gazebo_imu_plugin.so" name="rotors_gazebo_imugt_plugin">
      <!-- A good description of the IMU parameters can be found in the kalibr documentation:
           https://github.com/ethz-asl/kalibr/wiki/IMU-Noise-Model-and-Intrinsics -->
      <robotNamespace>/reshaping/bebop2_camera</robotNamespace>
      <!-- (string, required): ros namespace in which the messages are published -->
      <linkName>/reshaping/bebop2_camera/imugt_link</linkName>
      <!-- (string, required): name of the body which holds the IMU sensor -->
      <imuTopic>ground_truth/imu</imuTopic>
      <!-- (string): name of the sensor output topic and prefix of service names (defaults to imu) -->
      <gyroscopeNoiseDensity>0.0</gyroscopeNoiseDensity>
      <!-- Gyroscope noise density (two-sided spectrum) [rad/s/sqrt(Hz)] -->
      <gyroscopeRandomWalk>0.0</gyroscopeRandomWalk>
      <!-- Gyroscope bias random walk [rad/s/s/sqrt(Hz)] -->
      <gyroscopeBiasCorrelationTime>1000.0</gyroscopeBiasCorrelationTime>
      <!-- Gyroscope bias correlation time constant [s] -->
      <gyroscopeTurnOnBiasSigma>0.0</gyroscopeTurnOnBiasSigma>
      <!-- Gyroscope turn on bias standard deviation [rad/s] -->
      <accelerometerNoiseDensity>0.0</accelerometerNoiseDensity>
      <!-- Accelerometer noise density (two-sided spectrum) [m/s^2/sqrt(Hz)] -->
      <accelerometerRandomWalk>0.0</accelerometerRandomWalk>
      <!-- Accelerometer bias random walk. [m/s^2/s/sqrt(Hz)] -->
      <accelerometerBiasCorrelationTime>300.0</accelerometerBiasCorrelationTime>
      <!-- Accelerometer bias correlation time constant [s] -->
      <accelerometerTurnOnBiasSigma>0.0</accelerometerTurnOnBiasSigma>
      <!-- Accelerometer turn on bias standard deviation [m/s^2] -->
    </plugin>
  </gazebo>
  <!-- Mount a generic odometry sensor providing ground truth. -->
  <!-- odometry link -->
  <link name="/reshaping/bebop2_camera/odometry_sensorgt_link">
    <inertial>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
      <mass value="1e-05"/>
      <!-- [kg] -->
    </inertial>
  </link>
  <!-- odometry joint -->
  <joint name="/reshaping/bebop2_camera/odometry_sensorgt_joint" type="revolute">
    <parent link="/reshaping/bebop2_camera/base_link"/>
    <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
    <child link="/reshaping/bebop2_camera/odometry_sensorgt_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
  </joint>
  <gazebo>
    <plugin filename="librotors_gazebo_odometry_plugin.so" name="odometry_sensorgt">
      <linkName>/reshaping/bebop2_camera/odometry_sensorgt_link</linkName>
      <robotNamespace>/reshaping/bebop2_camera</robotNamespace>
      <poseTopic>ground_truth/pose</poseTopic>
      <poseWithCovarianceTopic>ground_truth/pose_with_covariance</poseWithCovarianceTopic>
      <positionTopic>ground_truth/position</positionTopic>
      <transformTopic>ground_truth/transform</transformTopic>
      <odometryTopic>ground_truth/odometry</odometryTopic>
      <parentFrameId>world</parentFrameId>
      <!-- Use the scoped link name here. e.g. Model::link. -->
      <childFrameId>/reshaping/bebop2_camera/base_link</childFrameId>
      <measurementDivisor>1</measurementDivisor>
      <!-- only every (seq % measurementDivisor) == 0 measurement is published [int] -->
      <measurementDelay>0</measurementDelay>
      <!-- time that measurement gets held back before it's published in [simulation cycles (int)] -->
      <unknownDelay>0.0</unknownDelay>
      <!-- additional delay, that just gets added to the timestamp [s] -->
      <noiseNormalPosition>0 0 0</noiseNormalPosition>
      <!-- standard deviation of additive white gaussian noise [m] -->
      <noiseNormalQuaternion>0 0 0</noiseNormalQuaternion>
      <!-- standard deviation white gaussian noise [rad]: q_m = q*quaternionFromSmallAngleApproximation(noiseNormalQ) -->
      <noiseNormalLinearVelocity>0 0 0</noiseNormalLinearVelocity>
      <!-- standard deviation of additive white gaussian noise [m/s] -->
      <noiseNormalAngularVelocity>0 0 0</noiseNormalAngularVelocity>
      <!-- standard deviation of additive white gaussian noise [rad/s] -->
      <noiseUniformPosition>0 0 0</noiseUniformPosition>
      <!-- symmetric bounds of uniform noise [m] -->
      <noiseUniformQuaternion>0 0 0</noiseUniformQuaternion>
      <!-- symmetric bounds of uniform noise [rad], computation see above -->
      <noiseUniformLinearVelocity>0 0 0</noiseUniformLinearVelocity>
      <!-- symmetric bounds of uniform noise [m/s] -->
      <noiseUniformAngularVelocity>0 0 0</noiseUniformAngularVelocity>
      <!-- symmetric bounds of uniform noise [rad/s] -->
    </plugin>
  </gazebo>
  <!-- Mount a generic odometry sensor without odometry map (working everywhere). -->
  <!-- odometry link -->
  <link name="/reshaping/bebop2_camera/odometry_sensor1_link">
    <inertial>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
      <mass value="1e-05"/>
      <!-- [kg] -->
    </inertial>
  </link>
  <!-- odometry joint -->
  <joint name="/reshaping/bebop2_camera/odometry_sensor1_joint" type="revolute">
    <parent link="/reshaping/bebop2_camera/base_link"/>
    <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
    <child link="/reshaping/bebop2_camera/odometry_sensor1_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
  </joint>
  <gazebo>
    <plugin filename="librotors_gazebo_odometry_plugin.so" name="odometry_sensor1">
      <linkName>/reshaping/bebop2_camera/odometry_sensor1_link</linkName>
      <robotNamespace>/reshaping/bebop2_camera</robotNamespace>
      <poseTopic>odometry_sensor1/pose</poseTopic>
      <poseWithCovarianceTopic>odometry_sensor1/pose_with_covariance</poseWithCovarianceTopic>
      <positionTopic>odometry_sensor1/position</positionTopic>
      <transformTopic>odometry_sensor1/transform</transformTopic>
      <odometryTopic>odometry_sensor1/odometry</odometryTopic>
      <parentFrameId>world</parentFrameId>
      <!-- Use the scoped link name here. e.g. Model::link. -->
      <childFrameId>/reshaping/bebop2_camera/odometry_sensor1</childFrameId>
      <measurementDivisor>1</measurementDivisor>
      <!-- only every (seq % measurementDivisor) == 0 measurement is published [int] -->
      <measurementDelay>0</measurementDelay>
      <!-- time that measurement gets held back before it's published in [simulation cycles (int)] -->
      <unknownDelay>0.0</unknownDelay>
      <!-- additional delay, that just gets added to the timestamp [s] -->
      <noiseNormalPosition>0 0 0</noiseNormalPosition>
      <!-- standard deviation of additive white gaussian noise [m] -->
      <noiseNormalQuaternion>0 0 0</noiseNormalQuaternion>
      <!-- standard deviation white gaussian noise [rad]: q_m = q*quaternionFromSmallAngleApproximation(noiseNormalQ) -->
      <noiseNormalLinearVelocity>0 0 0</noiseNormalLinearVelocity>
      <!-- standard deviation of additive white gaussian noise [m/s] -->
      <noiseNormalAngularVelocity>0 0 0</noiseNormalAngularVelocity>
      <!-- standard deviation of additive white gaussian noise [rad/s] -->
      <noiseUniformPosition>0 0 0</noiseUniformPosition>
      <!-- symmetric bounds of uniform noise [m] -->
      <noiseUniformQuaternion>0 0 0</noiseUniformQuaternion>
      <!-- symmetric bounds of uniform noise [rad], computation see above -->
      <noiseUniformLinearVelocity>0 0 0</noiseUniformLinearVelocity>
      <!-- symmetric bounds of uniform noise [m/s] -->
      <noiseUniformAngularVelocity>0 0 0</noiseUniformAngularVelocity>
      <!-- symmetric bounds of uniform noise [rad/s] -->
    </plugin>
  </gazebo>
</robot>

